@using DTO;
@inject NavigationManager NavMan
@inject ITaskService TaskServ

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage BrowserStorage


<div class="task-container">
    <h2>@Value.Title</h2>
    
    <DescriptionViewer Description="@Value.Description" />

    <div class="button-container-struct">
        <div class="button-container">
            <button class="btn btn-warning" @onclick=ToEdit> Edit </button>
        </div>
        <div class="button-container">
            <button class="btn btn-danger" @onclick=ToDelete> Delete </button>
        </div>
    </div>
</div>

<Loader Show=Show />


@code{
    private bool Show = false;

    [Parameter]
    public TaskTransferModal Value { get; set; }


    private void ToEdit()
    {
        NavMan.NavigateTo($"/EditTask/{Value.TaskID}");
    }

    private async Task ToDelete()
    {
        Show = true;
        await InvokeAsync(StateHasChanged);
        
        await TaskServ.DeleteTask(Value.TaskID);

        Show = false;
        await InvokeAsync(StateHasChanged);
        
        NavMan.NavigateTo(NavMan.Uri, true);
    }

}